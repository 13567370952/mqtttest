<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Layui快速入门</title>
    <url>/2024/05/03/Layui%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">作者: 夜泊1990</span><br><span class="line">企鹅: 1611756908</span><br><span class="line">鹅群: 948233848</span><br><span class="line">邮箱: hd1611756908@163.com</span><br><span class="line">博客: https://hd1611756908.github.io/</span><br><span class="line">B 站: https://space.bilibili.com/514155929/</span><br></pre></td></tr></table></figure>

<h2 id="第一章-Layui是什么"><a href="#第一章-Layui是什么" class="headerlink" title="第一章 Layui是什么"></a>第一章 Layui是什么</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Layui 是一套免费的开源 Web UI 组件库,遵循原生态的 HTML/CSS/JavaScript 开发模式,极易上手,拿来即用</span><br><span class="line"></span><br><span class="line">学习框架的意义: 写更少的代码,实现相同的功能.</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="第二章-Layui环境搭建"><a href="#第二章-Layui环境搭建" class="headerlink" title="第二章 Layui环境搭建"></a>第二章 Layui环境搭建</h2><h3 id="第1节-官网地址"><a href="#第1节-官网地址" class="headerlink" title="第1节 官网地址"></a>第1节 官网地址</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://layui.dev/</span><br><span class="line"></span><br><span class="line">当前版本 2.9.x 版本,相比于2.8.x和2.7.x新增了很多实用功能,下面会介绍.</span><br></pre></td></tr></table></figure>

<h3 id="第2节-环境搭建"><a href="#第2节-环境搭建" class="headerlink" title="第2节 环境搭建"></a>第2节 环境搭建</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">方式一 : 在线第三方 CDN 引入,UNPKG 和 CDNJS 均为第三方免费 CDN (详细请看官网)</span><br><span class="line"></span><br><span class="line">    &lt;!-- 引入 layui.css --&gt;</span><br><span class="line">    &lt;link href=&quot;//unpkg.com/layui@2.9.7/dist/css/layui.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">    &lt;!-- 引入 layui.js --&gt;</span><br><span class="line">    &lt;script src=&quot;//unpkg.com/layui@2.9.7/dist/layui.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">方式二 : 离线引入</span><br><span class="line"></span><br><span class="line">	离线引入方式需要去官网下载layui安装包,将css文件和js文件复制粘贴到项目中,然后在引入</span><br><span class="line">	下载地址: https://foruda.gitee.com/attach_file/1709083131303683727/layui-v2.9.7.zip?token=4d86625f99f8aa72a6131358c786aeb4&amp;ts=1709353417&amp;attname=layui-v2.9.7.zip</span><br><span class="line"></span><br><span class="line">方式三 : npm 引入(略)</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 前端模板如下: --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>layui<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 引入 layui.css --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;//unpkg.com/layui@2.9.7/dist/css/layui.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!-- 你的 HTML 代码 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 引入 layui.js --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//unpkg.com/layui@2.9.7/dist/layui.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>


<h2 id="第三章-Layui知识点大纲"><a href="#第三章-Layui知识点大纲" class="headerlink" title="第三章 Layui知识点大纲"></a>第三章 Layui知识点大纲</h2><table>
    <tr>
        <td>
            <img src="https://note.youdao.com/yws/api/personal/file/WEBa5414dbd90479d79d9a5a9539ee12e0d?method=download&shareKey=4b8d238ab4f7e8c12ad2310701d2c067">
        </td>
    </tr>
    <tr>
        <td style="font-size:14px;">
            大纲中只列举了常用的Layui前端知识点,其它的请查看官网.
        </td>
    </tr>
</table>



<h2 id="第四章-Layui页面元素"><a href="#第四章-Layui页面元素" class="headerlink" title="第四章 Layui页面元素"></a>第四章 Layui页面元素</h2><h3 id="第1节-布局元素"><a href="#第1节-布局元素" class="headerlink" title="第1节 布局元素"></a>第1节 布局元素</h3><h4 id="1-1-栅格布局"><a href="#1-1-栅格布局" class="headerlink" title="1.1 栅格布局"></a>1.1 栅格布局</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://layui.dev/docs/2/layout/grid.html</span><br></pre></td></tr></table></figure>

<ul>
<li>案例展示</li>
</ul>
<table>
    <tr>
        <td>
            <img src="https://note.youdao.com/yws/api/personal/file/WEBec329b24422feb6d79299856f591445d?method=download&shareKey=50201b0b98fed97eaf5b30be3509dfbc">
        </td>
    </tr>
</table>


<ul>
<li>传统布局(略)</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用传统布局实现案例样式代码量会比较多</span><br></pre></td></tr></table></figure>

<ul>
<li>Layui布局</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>Layui布局<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入 layui.css --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;//unpkg.com/layui@2.9.7/dist/css/layui.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 布局容器,水平居中  --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-container&quot;</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-row&quot;</span>&gt;</span></span><br><span class="line">			  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md3&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 350px;border: 1px solid #ccc;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md9&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 350px;border: 1px solid royalblue;&quot;</span>&gt;</span></span><br><span class="line">				  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-row&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 45px;border: 1px solid red;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-row&quot;</span>&gt;</span></span><br><span class="line">				  	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md9&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 303px;border: 1px solid fuchsia;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 引入 layui.js --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//unpkg.com/layui@2.9.7/dist/layui.js</span></span></span><br><span class="line"><span class="string"><span class="tag">	&lt;/body&gt;</span></span></span><br><span class="line"><span class="string"><span class="tag">&lt;/html&gt;</span></span></span><br></pre></td></tr></table></figure>

<table>
    <tr>
        <td>
            <img src="https://note.youdao.com/yws/api/personal/file/WEB523a50d186bcf3f3f1e30e4106e209a1?method=download&shareKey=484d05317dd2b41e30bc9ee3439eb558">
        </td>
    </tr>
</table>


<h4 id="1-2-布局容器"><a href="#1-2-布局容器" class="headerlink" title="1.2 布局容器"></a>1.2 布局容器</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://layui.dev/docs/2/layout/grid.html#container</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* 宽度固定水平居中 */</span><br><span class="line">&lt;div class=&quot;layui-container&quot;&gt;&lt;/div&gt;</span><br><span class="line">/* 宽度100% */</span><br><span class="line">&lt;div class=&quot;layui-fluid&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<h3 id="第2节-表格"><a href="#第2节-表格" class="headerlink" title="第2节 表格"></a>第2节 表格</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://layui.dev/docs/2/table/</span><br></pre></td></tr></table></figure>

<h3 id="第3节-按钮-x2F-图标"><a href="#第3节-按钮-x2F-图标" class="headerlink" title="第3节 按钮&#x2F;图标"></a>第3节 按钮&#x2F;图标</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://layui.dev/docs/2/button/</span><br><span class="line">https://layui.dev/docs/2/icon/</span><br></pre></td></tr></table></figure>

<h3 id="第4节-表单"><a href="#第4节-表单" class="headerlink" title="第4节 表单"></a>第4节 表单</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://layui.dev/docs/2/form/</span><br></pre></td></tr></table></figure>


<h3 id="第5节-其它"><a href="#第5节-其它" class="headerlink" title="第5节 其它"></a>第5节 其它</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">动画、导航、菜单等...</span><br></pre></td></tr></table></figure>

<h2 id="第五章-Layui内置模块"><a href="#第五章-Layui内置模块" class="headerlink" title="第五章 Layui内置模块"></a>第五章 Layui内置模块</h2><h3 id="第1节-分页模块"><a href="#第1节-分页模块" class="headerlink" title="第1节 分页模块"></a>第1节 分页模块</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://layui.dev/docs/2/laypage/</span><br></pre></td></tr></table></figure>

<h3 id="第2节-数据表格"><a href="#第2节-数据表格" class="headerlink" title="第2节 数据表格"></a>第2节 数据表格</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://layui.dev/docs/2/table/</span><br></pre></td></tr></table></figure>
<h3 id="第3节-弹出层"><a href="#第3节-弹出层" class="headerlink" title="第3节 弹出层"></a>第3节 弹出层</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://layui.dev/docs/2/layer/</span><br></pre></td></tr></table></figure>
<h3 id="第4节-表单模块"><a href="#第4节-表单模块" class="headerlink" title="第4节 表单模块"></a>第4节 表单模块</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://layui.dev/docs/2/form/</span><br></pre></td></tr></table></figure>
<h3 id="第5节-时间模块"><a href="#第5节-时间模块" class="headerlink" title="第5节 时间模块"></a>第5节 时间模块</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://layui.dev/docs/2/laydate/</span><br></pre></td></tr></table></figure>
<h3 id="第6节-文件上传模块"><a href="#第6节-文件上传模块" class="headerlink" title="第6节 文件上传模块"></a>第6节 文件上传模块</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://layui.dev/docs/2/upload/</span><br></pre></td></tr></table></figure>
<h3 id="第7节-树状表格模块"><a href="#第7节-树状表格模块" class="headerlink" title="第7节 树状表格模块"></a>第7节 树状表格模块</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">方式 1 : layui2.7版本不带树状表格,需要借助第三方   https://dev.layuion.com/extend/</span><br><span class="line">方式 2 : layui2.8/9版本新增树状表格,使用起来更方便   https://layui.dev/docs/2/treeTable/</span><br></pre></td></tr></table></figure>

<h3 id="第8节-其它模块"><a href="#第8节-其它模块" class="headerlink" title="第8节 其它模块"></a>第8节 其它模块</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">以上介绍的模块是开发中常见的模块,如果想使用其它模块,请查看官网</span><br></pre></td></tr></table></figure>

<h2 id="第六章-Layui框架案例练习"><a href="#第六章-Layui框架案例练习" class="headerlink" title="第六章 Layui框架案例练习"></a>第六章 Layui框架案例练习</h2><h3 id="第1节-SQL语句"><a href="#第1节-SQL语句" class="headerlink" title="第1节 SQL语句"></a>第1节 SQL语句</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 创建数据库</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE book <span class="keyword">DEFAULT</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> UTF8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建数据库表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> category(</span><br><span class="line">    category_id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;分类ID&#x27;</span>,</span><br><span class="line">    category_name <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;分类名称&#x27;</span></span><br><span class="line">) <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span><span class="string">&#x27;UTF8&#x27;</span> AUTO_INCREMENT<span class="operator">=</span><span class="number">10000</span> COMMENT <span class="string">&#x27;图书分类表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> category(category_name) <span class="keyword">VALUES</span>(<span class="string">&#x27;科技&#x27;</span>),(<span class="string">&#x27;文学&#x27;</span>),(<span class="string">&#x27;历史&#x27;</span>),(<span class="string">&#x27;财经&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建图书表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> book(</span><br><span class="line">    book_id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT COMMENT <span class="string">&#x27;图书ID&#x27;</span>,</span><br><span class="line">    book_name <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;图书名称&#x27;</span>,</span><br><span class="line">    author_name <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;图书作者&#x27;</span>,</span><br><span class="line">    price <span class="keyword">DOUBLE</span>(<span class="number">12</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="number">0.00</span> COMMENT <span class="string">&#x27;图书价格&#x27;</span>,</span><br><span class="line">    category_id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;分类ID,关联分类表主键&#x27;</span>,</span><br><span class="line">    create_time DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    status <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span> COMMENT <span class="string">&#x27;是否上架 1:上架 0:下架&#x27;</span>,</span><br><span class="line">    book_url <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;图书主图地址&#x27;</span>,</span><br><span class="line">    book_address <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;真实地址&#x27;</span></span><br><span class="line">) <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span><span class="string">&#x27;UTF8&#x27;</span> AUTO_INCREMENT<span class="operator">=</span><span class="number">10000</span> COMMENT <span class="string">&#x27;图书表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 关联</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> book <span class="keyword">ADD</span> <span class="keyword">FOREIGN</span> KEY (category_id) <span class="keyword">REFERENCES</span> category(category_id);</span><br></pre></td></tr></table></figure>

<h3 id="第2节-页面展示"><a href="#第2节-页面展示" class="headerlink" title="第2节 页面展示"></a>第2节 页面展示</h3><table>
    <tr>
        <td>
            <img src="https://note.youdao.com/yws/api/personal/file/WEBcaa39e034539b0436c60175c4bc15f87?method=download&shareKey=5251378f90ebd97962429356230647af">
        </td>
    </tr>
    <tr>
        <td>
            <img src="https://note.youdao.com/yws/api/personal/file/WEBfeb4a5ed6e47f0cff0af91fa4e2223c1?method=download&shareKey=80b34117c9de27640bd38f3fc42ab33c">
        </td>
    </tr>
    <tr>
        <td>
            <img src="https://note.youdao.com/yws/api/personal/file/WEB1277a1620a1118934e164d8013075215?method=download&shareKey=7899d9be3b1c64ff16c4543a37f67577">
        </td>
    </tr>
    <tr>
        <td>
            <img src="https://note.youdao.com/yws/api/personal/file/WEBbee41cf043b4124b0f2ff952d80420df?method=download&shareKey=beb1c52915054fdd7d901edd3e22b3f9">
        </td>
    </tr>
    <tr>
        <td>
            <img src="https://note.youdao.com/yws/api/personal/file/WEBaed2d0b4ae0699e1456d033316e79bf9?method=download&shareKey=40a5537004c56713eca6ff7d5d5cc6bd">
        </td>
    </tr>
</table>


<h2 id="第七章-Layui框架模板使用-Pear-Admin-Layui"><a href="#第七章-Layui框架模板使用-Pear-Admin-Layui" class="headerlink" title="第七章 Layui框架模板使用(Pear Admin Layui)"></a>第七章 Layui框架模板使用(Pear Admin Layui)</h2><h3 id="第1节-官网地址-1"><a href="#第1节-官网地址-1" class="headerlink" title="第1节 官网地址"></a>第1节 官网地址</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.pearadmin.com/</span><br></pre></td></tr></table></figure>

<h3 id="第2节-在线演示地址"><a href="#第2节-在线演示地址" class="headerlink" title="第2节 在线演示地址"></a>第2节 在线演示地址</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://layui.pearadmin.com/</span><br></pre></td></tr></table></figure>

<table>
    <tr>
        <td>
            <img src="https://note.youdao.com/yws/api/personal/file/WEB1fc5dd0f446c590b847196457a44446e?method=download&shareKey=5e20f7c11b7c1038647a4a906598c93b">
        </td>
    </tr>
</table>


<h3 id="第2节-CRUD练习-略"><a href="#第2节-CRUD练习-略" class="headerlink" title="第2节 CRUD练习(略)"></a>第2节 CRUD练习(略)</h3>]]></content>
      <categories>
        <category>Layui</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>css</tag>
        <tag>JavaScript</tag>
        <tag>Layui</tag>
        <tag>pearAdmin</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>MQTT协议快速入门</title>
    <url>/2024/05/05/MQTT%E5%8D%8F%E8%AE%AE%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">作者: 夜泊1990</span><br><span class="line">企鹅: 1611756908</span><br><span class="line">鹅群: 948233848</span><br><span class="line">邮箱: hd1611756908@163.com</span><br><span class="line">博客: https://hd1611756908.github.io/</span><br><span class="line">B 站: https://space.bilibili.com/514155929/</span><br></pre></td></tr></table></figure>

<h2 id="第一章-MQTT协议概述"><a href="#第一章-MQTT协议概述" class="headerlink" title="第一章 MQTT协议概述"></a>第一章 MQTT协议概述</h2><h3 id="第1节-MQTT协议介绍"><a href="#第1节-MQTT协议介绍" class="headerlink" title="第1节 MQTT协议介绍"></a>第1节 MQTT协议介绍</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MQTT是一种基于发布/订阅模式的轻量级消息传输协议，设计用于低带宽、高延迟或不稳定的网络环境，广泛应用于物联网领域</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="第2节-MQTT协议版本更迭"><a href="#第2节-MQTT协议版本更迭" class="headerlink" title="第2节 MQTT协议版本更迭"></a>第2节 MQTT协议版本更迭</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">1999年    MQTT v1.0 由IBM Andy Stanford-Clark和Eurotech的Arlen Nipper为石油管道远程监控项目发明的</span><br><span class="line">2010年    MQTT v3.1 IBM将 MQTT v3.1版本协议开放给所有人使用</span><br><span class="line">2014年10月 MQTT v3.1.1 MQTT正式成为OASIS标准                   --当前主流版本</span><br><span class="line">2019年03月 OASIS发布了 MQTT v5.0 5.0版本成为了OASIS的新的标准     -- 后起之秀版本</span><br></pre></td></tr></table></figure>

<h3 id="第3节-MQTT协议的应用场景"><a href="#第3节-MQTT协议的应用场景" class="headerlink" title="第3节 MQTT协议的应用场景"></a>第3节 MQTT协议的应用场景</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">1. 智能家居       : MQTT可以用于连接各种家电设备和传感器，实现设备之间的通信和控制</span><br><span class="line">2. 车联网         : MQTT可以用于车辆与车辆、车辆与基础设施之间的实时通信</span><br><span class="line">3. 工业物联网     : MQTT可以用于连接各种工业设备和传感器，实现设备的监测和控制</span><br><span class="line">4. 远程监控和控制  : MQTT可以用于将传感器数据发布到云平台，供其他设备或应用程序订阅和使用</span><br><span class="line">5. 消息通知       : MQTT可以用于提供实时消息通知功能</span><br><span class="line">6. 资源监控与管理  : MQTT能够提供对物联网设备的实时监控和管理功能</span><br><span class="line">7. 数据采集和分析  : MQTT也可以用于数据采集和分析</span><br></pre></td></tr></table></figure>

<p><img src="https://note.youdao.com/yws/api/personal/file/WEBf5f1ada649a28c320db46217fc5e4bb6?method=download&shareKey=5aec6bfe86acba0df47948c623b1edbc" alt="MQTT能力"></p>
<h3 id="第4节-MQTT协议优势"><a href="#第4节-MQTT协议优势" class="headerlink" title="第4节 MQTT协议优势"></a>第4节 MQTT协议优势</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 常见的计算机语言(C/C++、Java、Python、Go...)都有支持MQTT协议的客户端</span><br><span class="line">2. MQTT协议是建立在TCP/IP协议基础之上,所以MQTT协议安全可靠</span><br><span class="line">3. 服务质量设置，MQTT协议提供了三种服务质量配置分别为:</span><br><span class="line">	Qos 0: 消息可能丢失 </span><br><span class="line">	Qos 1: 消息不会丢失,但是可能重复</span><br><span class="line">	Qos 2: 消息不会丢失也不会重复</span><br><span class="line">4. 心跳保活: 由于网络问题可能造成连接陷于假死状态,为了判断客户端和代理是否出现异常，MQTT定义自己的心跳机制，定期向代理发送报文，以便于快速识别出异常连接，让客户端快速与代理断开连接</span><br><span class="line">5. 持久会话: 代理保留客户端发送过来的消息，以便于消息订阅端上线立刻获取消息</span><br><span class="line">....</span><br></pre></td></tr></table></figure>

<h3 id="第5节-MQTT协议报文"><a href="#第5节-MQTT协议报文" class="headerlink" title="第5节 MQTT协议报文"></a>第5节 MQTT协议报文</h3><h4 id="5-1-报文-数据包-结构"><a href="#5-1-报文-数据包-结构" class="headerlink" title="5.1 报文(数据包)结构"></a>5.1 报文(数据包)结构</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MQTT报文(数据包)由三部分组成:</span><br><span class="line">1. 固定报头(Fixed header)    : 所有数据包中都包含此报头,用来表示数据包的类型,以及数据包的分组累标识</span><br><span class="line">2. 可变报头(Variable header) : 存在于部分MQTT数据包中,数据包类型决定了可变头是否存在及其具体内容</span><br><span class="line">3. 有效载荷(Payload)         : 存在于部分MQTT数据包中,表示客户端收到的具体内容</span><br></pre></td></tr></table></figure>

<p><img src="https://note.youdao.com/yws/api/personal/file/WEB1cfb82320eec5fcc9bb37ccb79992517?method=download&shareKey=d1b7ba2a4ab5fd51216da8d8e69f8555" alt="baowen"></p>
<h4 id="5-2-固定报头格式-Fixed-header"><a href="#5-2-固定报头格式-Fixed-header" class="headerlink" title="5.2 固定报头格式(Fixed header)"></a>5.2 固定报头格式(Fixed header)</h4><p><img src="https://note.youdao.com/yws/api/personal/file/WEB25ef81539ff6766878d259f26bd9ef68?method=download&shareKey=b2de947188cdf5039cf1c24f6f71aae2" alt="mqtt"></p>
<h5 id="5-2-1-固定报头介绍"><a href="#5-2-1-固定报头介绍" class="headerlink" title="5.2.1 固定报头介绍"></a>5.2.1 固定报头介绍</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先固定报头一定存在所有的数据包中,也就是说在客户端与服务器端进行通信时,传递的所有消息中都包含固定报头</span><br><span class="line">那么固定报头主要是做什么的呢?</span><br><span class="line">举例说明：假如客户端向服务器端发送一个请求，那么问题来了，服务器端怎么判断客户端发送的这个请求是什么类型的请求，要给服务器传递数据呀，还是只是来判断服务器是否存活，还是想和服务器断开连接的请求，所以固定报头里面就保存了客户端向服务器端发送请求的类型，也就是上图中所谓的MQTT报文类型(占据byte1的高4位). byte1还有低4位，取值范围也是0-15，但是基本都是保留位,只有当MQTT的高4位类型是PUBLISH的时候，byte1的低4位取值才有意义,下面会详细介绍</span><br></pre></td></tr></table></figure>

<h5 id="5-2-2-固定报头格式介绍"><a href="#5-2-2-固定报头格式介绍" class="headerlink" title="5.2.2 固定报头格式介绍"></a>5.2.2 固定报头格式介绍</h5><blockquote>
<p>byte1 高4位 MQTT报文类型介绍</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">byte1的高4位取值范围:</span><br><span class="line">二进制: 0000~1111</span><br><span class="line">十进制: 0-15</span><br><span class="line"></span><br><span class="line">具体每一个值对应的格式详细如下</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>报文类型名称</th>
<th>报文类型对应值</th>
<th>报文表示的意义</th>
<th>描述</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>Reserved</td>
<td>0</td>
<td>禁止</td>
<td>保留位</td>
<td>默认值 高4位 取值 0000</td>
</tr>
<tr>
<td>CONNECT</td>
<td>1</td>
<td>客户端到服务端</td>
<td>客户端请求连接服务端</td>
<td>高4位 取值 0001</td>
</tr>
<tr>
<td>CONNACK</td>
<td>2</td>
<td>服务端到客户端</td>
<td>连接报文确认</td>
<td>高4位 取值 0010</td>
</tr>
<tr>
<td>PUBLISH</td>
<td>3</td>
<td>两个方向都允许</td>
<td>发布消息</td>
<td>高4位 取值 0011</td>
</tr>
<tr>
<td>PUBACK</td>
<td>4</td>
<td>两个方向都允许</td>
<td>QoS 1消息发布收到确认</td>
<td>高4位 取值 0100</td>
</tr>
<tr>
<td>PUBREC</td>
<td>5</td>
<td>两个方向都允许</td>
<td>发布收到（保证交付第一步）</td>
<td>高4位 取值 0101</td>
</tr>
<tr>
<td>PUBREL</td>
<td>6</td>
<td>两个方向都允许</td>
<td>发布释放（保证交付第二步）</td>
<td>高4位 取值 0110</td>
</tr>
<tr>
<td>PUBCOMP</td>
<td>7</td>
<td>两个方向都允许</td>
<td>QoS 2消息发布完成（保证交互第三步）</td>
<td>高4位 取值 0111</td>
</tr>
<tr>
<td>SUBSCRIBE</td>
<td>8</td>
<td>客户端到服务端</td>
<td>客户端订阅请求</td>
<td>高4位 取值 1000</td>
</tr>
<tr>
<td>SUBACK</td>
<td>9</td>
<td>服务端到客户端</td>
<td>订阅请求报文确认</td>
<td>高4位 取值 1001</td>
</tr>
<tr>
<td>UNSUBSCRIBE</td>
<td>10</td>
<td>客户端到服务端</td>
<td>客户端取消订阅请求</td>
<td>高4位 取值 1010</td>
</tr>
<tr>
<td>UNSUBACK</td>
<td>11</td>
<td>服务端到客户端</td>
<td>取消订阅报文确认</td>
<td>高4位 取值 1011</td>
</tr>
<tr>
<td>PINGREQ</td>
<td>12</td>
<td>客户端到服务端</td>
<td>心跳请求</td>
<td>高4位 取值 1100</td>
</tr>
<tr>
<td>PINGRESP</td>
<td>13</td>
<td>服务端到客户端</td>
<td>心跳请求</td>
<td>高4位 取值 1101</td>
</tr>
<tr>
<td>DISCONNECT</td>
<td>14</td>
<td>客户端到服务端</td>
<td>客户端断开连接</td>
<td>高4位 取值 1110</td>
</tr>
<tr>
<td>Reserved</td>
<td>15</td>
<td>禁止</td>
<td>保留位</td>
<td>高4位 取值 1111</td>
</tr>
</tbody></table>
<blockquote>
<p>byte1 低4位MQTT其他配置介绍</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">byte1 低4位默认大多都是保留位,没有意义,但是当MQTT类型为PUBLISH(0011)时 低4位开始有意义,具体如下:</span><br></pre></td></tr></table></figure>

<p><img src="https://note.youdao.com/yws/api/personal/file/WEB1fdb1211e214cb9c03493c1e267db436?method=download&shareKey=55700ec7529325c88727738673944231" alt="geshi"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">当byte1的高4位取值为0011时，byte1的低4位就会有意义</span><br><span class="line"></span><br><span class="line">DUP位: 如果设置0客户端或服务端第一次请求发送这个PUBLISH报文,如果设置1，表示这可能是一个早前报文请求的重发</span><br><span class="line">Qos位: 由2位组成取值范围是0-3(00~11) 服务质量,每一个值代表的意义如下</span><br><span class="line"></span><br><span class="line">Qos值    bit2    bit1      描述</span><br><span class="line"> 0        0       0     消息可能丢失</span><br><span class="line"> 1        0       1     消息不会丢失,但是可能重复</span><br><span class="line"> 2        1       0     消息不会丢失,也不回重复</span><br><span class="line"> x        1       1     保留位</span><br><span class="line"> </span><br><span class="line">RETAIN位: 1/0</span><br><span class="line">	1. 如果设置1 那么服务器端必须保存Qos信息,以便将Qos信息传递给其它的订阅者；</span><br><span class="line">	2. 如果服务器端收到一个RETAIN为1并且QoS0的消息，服务器端需要丢弃掉原来那个主题保留任何消息，将这个新的QoS0消息当作主题的新保留消息 </span><br><span class="line">	3. 服务端发送消息给订阅者,如果订阅者是一个新的，那么RETAIN为1，如果订阅者是一个已经存在的RETAIN为0</span><br><span class="line">	4. RETAIN为0并且有效载荷为0的报文，服务端会当作正常消息处理</span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<h4 id="5-3-可变报头"><a href="#5-3-可变报头" class="headerlink" title="5.3 可变报头"></a>5.3 可变报头</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">可变报头包含主题名和报文标识符</span><br></pre></td></tr></table></figure>

<h4 id="5-4-有效载荷"><a href="#5-4-有效载荷" class="headerlink" title="5.4 有效载荷"></a>5.4 有效载荷</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">主要是传递的消息</span><br></pre></td></tr></table></figure>

<h3 id="第6节-MQTT协议的工作原理"><a href="#第6节-MQTT协议的工作原理" class="headerlink" title="第6节 MQTT协议的工作原理"></a>第6节 MQTT协议的工作原理</h3><p><img src="https://note.youdao.com/yws/api/personal/file/WEB9bee4853a8bd940dbc1927ddfc1ba49c?method=download&shareKey=f7c7d216b16a34aa5c478606e1c1aed5" alt="mqtt"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MQTT协议基于TCP/IP协议,TCP/IP协议是一个安全稳定的协议,通信需要服务端和客户端经历三次握手四次挥手，建立一个稳定的通道然后在进行数据传输。MQTT协议建立在TCP/IP协议之上,也是需要编写服务端(上图中的Broker)和客户端(消息发布者和消息订阅者).</span><br><span class="line"></span><br><span class="line">下面就用案例进行MQTT学习</span><br></pre></td></tr></table></figure>

<h2 id="第二章-MQTT代理服务器介绍和搭建"><a href="#第二章-MQTT代理服务器介绍和搭建" class="headerlink" title="第二章 MQTT代理服务器介绍和搭建"></a>第二章 MQTT代理服务器介绍和搭建</h2><h3 id="第1节-MQTT代理服务器介绍"><a href="#第1节-MQTT代理服务器介绍" class="headerlink" title="第1节 MQTT代理服务器介绍"></a>第1节 MQTT代理服务器介绍</h3><h4 id="1-1-Eclipse-Mosquitto"><a href="#1-1-Eclipse-Mosquitto" class="headerlink" title="1.1 Eclipse Mosquitto"></a>1.1 Eclipse Mosquitto</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">官网地址: https://mosquitto.org/</span><br><span class="line"></span><br><span class="line">介绍:</span><br><span class="line">1. 开源的消息代理服务器</span><br><span class="line">2. 支持MQTT协议版本 3.1 3.1.1 5.0 版本</span><br><span class="line">3. 轻量级,适用从低功耗单板计算机到完整服务器的所有设备</span><br><span class="line">4. 不支持集群功能</span><br></pre></td></tr></table></figure>

<h4 id="1-2-EMQX"><a href="#1-2-EMQX" class="headerlink" title="1.2 EMQX"></a>1.2 EMQX</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">官网地址: https://www.emqx.io/zh</span><br><span class="line"></span><br><span class="line">介绍:</span><br><span class="line">1. 开源大规模分布式MQTT代理服务器</span><br><span class="line">2. 支持MQTT协议版本 3.1 3.1.1 5.0 版本</span><br><span class="line">3. 单台并发连接数可以高达一亿,每秒处理百万级消息</span><br><span class="line">4. 安全可靠的消息传递</span><br></pre></td></tr></table></figure>

<h3 id="第2节-MQTT代理服务器安装-EMQX"><a href="#第2节-MQTT代理服务器安装-EMQX" class="headerlink" title="第2节 MQTT代理服务器安装(EMQX)"></a>第2节 MQTT代理服务器安装(EMQX)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">EMQX安装: windows</span><br><span class="line">1. 下载地址: https://www.emqx.io/zh/get-started</span><br><span class="line">2. 安装步骤:</span><br><span class="line">	第一步: 下载 emqx-5.3.2-windows-amd64.zip 安装包,版本可能和我这个不同</span><br><span class="line">	第二步: 解压</span><br><span class="line">	第三步: 打开命令行(以管理员身份运行),切换到解压目录的bin目录下</span><br><span class="line">	第四步: 安装,在bin目录下执行EMQX安装命令  emqx.cmd install ,完成之后有类似下面的输出,说明安装成功,只需要安装一次</span><br><span class="line">        D:\app\emqx-5.3.2-windows-amd64\bin&gt;emqx.cmd install</span><br><span class="line">        EMQX_NODE__DB_ROLE [node.role]: core</span><br><span class="line">        EMQX_NODE__DB_BACKEND [node.db_backend]: mnesia</span><br><span class="line">        D:\app\emqx-5.3.2-windows-amd64\erts-13.2.2.4\bin\erlsrv.exe: Service emqx_5.3.2 added to system.</span><br><span class="line">        [SC] ChangeServiceConfig 成功</span><br><span class="line">	第五步(可选择): 如果想将EMQX从windows上卸载可以执行 emqx.cmd uninstall 命令</span><br><span class="line">	第六步: 去windows服务列表中找到第四步安装的EMQX的服务,鼠标右键启动</span><br><span class="line">	第七步: 在命令行输入 emqx.cmd console 命令，查看是否启动成功,如果有类似以下日志启动成功</span><br><span class="line">		D:\app\emqx-5.3.2-windows-amd64\bin&gt;emqx.cmd console</span><br><span class="line">        EMQX_LOG__CONSOLE_HANDLER__ENABLE [log.console.enable]: true</span><br><span class="line">        EMQX_NODE__DB_ROLE [node.role]: core</span><br><span class="line">        EMQX_NODE__DB_BACKEND [node.db_backend]: mnesia</span><br><span class="line"></span><br><span class="line">        D:\app\emqx-5.3.2-windows-amd64&gt;D:\app\emqx-5.3.2-windows-amd64\erts-13.2.2.4\bin\erl.exe -mode embedded -boot &quot;D:\app\emqx-5.3.2-windows-amd64\releases\5.3.2\start&quot; -config &quot;D:\app\emqx-5.3.2-windows-amd64\data\configs\app.2024.05.06.16.38.19.config&quot; -args_file &quot;D:\app\emqx-5.3.2-windows-amd64\data\configs\vm.2024.05.06.16.38.19.args&quot; -mnesia dir &#x27;d:/app/emqx-5.3.2-windows-amd64/data/mnesia/emqx@127.0.0.1&#x27;</span><br><span class="line">        Listener ssl:default on 0.0.0.0:8883 started.</span><br><span class="line">        Listener tcp:default on 0.0.0.0:1883 started.</span><br><span class="line">        Listener ws:default on 0.0.0.0:8083 started.</span><br><span class="line">        Listener wss:default on 0.0.0.0:8084 started.</span><br><span class="line">        Listener http:dashboard on :18083 started.</span><br><span class="line">        EMQX 5.3.2 is running now!</span><br><span class="line">        Eshell V13.2.2.4  (abort with ^G)</span><br><span class="line">        v5.3.2(emqx@127.0.0.1)1&gt;</span><br><span class="line">    </span><br><span class="line">    第八步:通过浏览器访问控制台http://127.0.0.1:18083 默认初始化用户名: admin 默认密码: public 进入之后会让你重新修改密码</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">注意事项: (第六步+第七步)这种启动方式在开发时使用,如果想正式环境使用请遵循官网命令启动介绍: 正式环境启动在bin目录下直接输入 emqx start进行EMQX启动,这时不需要（第六步和第七步）</span><br><span class="line"></span><br><span class="line">官网命令详细使用地址: https://www.emqx.io/docs/zh/latest/admin/cli.html    </span><br></pre></td></tr></table></figure>

<h3 id="第3节-MQTT客户端工具介绍"><a href="#第3节-MQTT客户端工具介绍" class="headerlink" title="第3节 MQTT客户端工具介绍"></a>第3节 MQTT客户端工具介绍</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">EMQX官网自带工具MQTTX官网地址: https://mqttx.app/zh/downloads</span><br></pre></td></tr></table></figure>

<h3 id="第4节-MQTT客户端工具安装和使用"><a href="#第4节-MQTT客户端工具安装和使用" class="headerlink" title="第4节 MQTT客户端工具安装和使用"></a>第4节 MQTT客户端工具安装和使用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">傻瓜式安装,无脑下一步</span><br></pre></td></tr></table></figure>

<h2 id="第三章MQTT协议练习-Java版"><a href="#第三章MQTT协议练习-Java版" class="headerlink" title="第三章MQTT协议练习(Java版)"></a>第三章MQTT协议练习(Java版)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先在编写代码前需要安装Broker,如果已经安装完,需要将Broker启动起来,我这里使用EMQX作为Broker. 接下来开始代码编写.</span><br><span class="line"></span><br><span class="line">基于maven项目,需要向项目中添加maven依赖,依赖来自于EMQX官网地址为: https://www.emqx.com/zh/mqtt-client-sdk</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.eclipse.paho&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;org.eclipse.paho.client.mqttv3&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.2.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">依赖添加完成之后,需要编写 客户端-消息订阅者和 客户端-消息发布者</span><br></pre></td></tr></table></figure>

<h3 id="第1节-MQTT客户端之消息订阅者"><a href="#第1节-MQTT客户端之消息订阅者" class="headerlink" title="第1节 MQTT客户端之消息订阅者"></a>第1节 MQTT客户端之消息订阅者</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.*;</span><br><span class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息订阅者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Subscribe</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//代理服务器地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String BROKER=<span class="string">&quot;tcp://127.0.0.1:1883&quot;</span>;</span><br><span class="line">    <span class="comment">//客户端ID</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLIENT_ID=<span class="string">&quot;test01&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MqttException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            创建消息发布客户端对象</span></span><br><span class="line"><span class="comment">            第一个参数: 代理服务器地址</span></span><br><span class="line"><span class="comment">            第二个参数: 给客户端起一个唯一名字</span></span><br><span class="line"><span class="comment">            第三个参数: 使用MemoryPersistence进行动态消息存储,如果不给值,使用内部默认的类进行持久消息存储</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">MqttClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MqttClient</span>(BROKER, CLIENT_ID, <span class="keyword">new</span> <span class="title class_">MemoryPersistence</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建MQTT连接配置</span></span><br><span class="line">        <span class="type">MqttConnectOptions</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MqttConnectOptions</span>();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            是否清空会话session</span></span><br><span class="line"><span class="comment">            如果设置false那么就会保留历史session</span></span><br><span class="line"><span class="comment">            如果设置成true每次连接都是新的session</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        connection.setCleanSession(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将客户端和连接关联</span></span><br><span class="line">        client.connect(connection);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置回调函数(当发布者发布消息后被订阅者监听到,并且通过回调函数进行接收)</span></span><br><span class="line">        client.setCallback(<span class="keyword">new</span> <span class="title class_">MqttCallback</span>() &#123;</span><br><span class="line">            <span class="comment">//连接丢失</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">connectionLost</span><span class="params">(Throwable throwable)</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;连接已丢失...&quot;</span>+throwable.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 消息已送达</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">messageArrived</span><span class="params">(String s, MqttMessage mqttMessage)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;消息已送达...订阅的主题:&quot;</span>+s+<span class="string">&quot; 收到的消息为:\n&quot;</span>+<span class="keyword">new</span> <span class="title class_">String</span>(mqttMessage.getPayload()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 消息接收完成</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deliveryComplete</span><span class="params">(IMqttDeliveryToken iMqttDeliveryToken)</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;消息接受已完成....&quot;</span>+iMqttDeliveryToken.isComplete());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 订阅test主题的消息</span></span><br><span class="line"><span class="comment">         * subscribe消息订阅函数</span></span><br><span class="line"><span class="comment">         * 参数1: 要订阅的主题</span></span><br><span class="line"><span class="comment">         * 参数2: 服务质量,取值为 0、1、2</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        client.subscribe(<span class="string">&quot;test&quot;</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;消息监听开始.....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="第2节-MQTT客户端之消息发布者"><a href="#第2节-MQTT客户端之消息发布者" class="headerlink" title="第2节 MQTT客户端之消息发布者"></a>第2节 MQTT客户端之消息发布者</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttClient;</span><br><span class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttConnectOptions;</span><br><span class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttException;</span><br><span class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.MqttMessage;</span><br><span class="line"><span class="keyword">import</span> org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消息发布者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Publish</span> &#123;</span><br><span class="line">    <span class="comment">//代理服务器地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String BROKER=<span class="string">&quot;tcp://127.0.0.1:1883&quot;</span>;</span><br><span class="line">    <span class="comment">//客户端ID</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLIENT_ID=<span class="string">&quot;test02&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MqttException, UnsupportedEncodingException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            创建消息发布客户端对象</span></span><br><span class="line"><span class="comment">            第一个参数: 代理服务器地址</span></span><br><span class="line"><span class="comment">            第二个参数: 给客户端起一个唯一名字</span></span><br><span class="line"><span class="comment">            第三个参数: 使用MemoryPersistence进行动态消息存储,如果不给值,使用内部默认的类进行持久消息存储</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">MqttClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MqttClient</span>(BROKER, CLIENT_ID, <span class="keyword">new</span> <span class="title class_">MemoryPersistence</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建MQTT连接配置</span></span><br><span class="line">        <span class="type">MqttConnectOptions</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MqttConnectOptions</span>();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            是否清空会话session</span></span><br><span class="line"><span class="comment">            如果设置false那么就会保留历史session</span></span><br><span class="line"><span class="comment">            如果设置成true每次连接都是新的session</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        connection.setCleanSession(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//将客户端和连接关联</span></span><br><span class="line">        client.connect(connection);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            创建消息</span></span><br><span class="line"><span class="comment">            调用有参构造函数进行创建,参数传一个byte数组,数组中是要发布的消息(有效载荷)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">MqttMessage</span> <span class="variable">message</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MqttMessage</span>(<span class="string">&quot;我是要发布的消息&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">        <span class="comment">//设置服务质量</span></span><br><span class="line">        message.setQos(<span class="number">2</span>);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">            消息发布</span></span><br><span class="line"><span class="comment">            第一个参数: 消息发送到哪一个主题</span></span><br><span class="line"><span class="comment">            第二个参数: 发送的消息对象</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        client.publish(<span class="string">&quot;test&quot;</span>,message);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//断开连接</span></span><br><span class="line">        client.disconnect();</span><br><span class="line">        <span class="comment">//关闭</span></span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MQTT</category>
      </categories>
      <tags>
        <tag>mqtt</tag>
        <tag>tcp</tag>
        <tag>websocket</tag>
      </tags>
  </entry>
</search>
